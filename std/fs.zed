// Filesystem operations

fn open(path, flags) {
    asm "movq $2, %rax    # sys_open
         movq %rdi, %rdi  # path
         movq %rsi, %rsi  # flags
         xor %rdx, %rdx   # mode = 0
         syscall"
         : "=r"[fd]       # return fd in rax
         : "r"[path], "r"[flags]
         : "rax", "rdi", "rsi", "rdx";
    return fd;
}

fn close(fd) {
    asm "movq $3, %rax   # sys_close
         movq %rdi, %rdi # fd
         syscall"
         :
         : "r"[fd]
         : "rax", "rdi";
}

fn read(fd, buf, len) {
    asm "movq $0, %rax     # sys_read
         movq %rdi, %rdi   # fd
         movq %rsi, %rsi   # buf
         movq %rdx, %rdx   # len
         syscall"
         : "=r"[bytes_read]
         : "r"[fd], "r"[buf], "r"[len]
         : "rax", "rdi", "rsi", "rdx";
    return bytes_read;
}

fn write(fd, buf, len) {
    asm "movq $1, %rax     # sys_write
         movq %rdi, %rdi   # fd
         movq %rsi, %rsi   # buf
         movq %rdx, %rdx   # len
         syscall"
         : "=r"[bytes_written]
         : "r"[fd], "r"[buf], "r"[len]
         : "rax", "rdi", "rsi", "rdx";
    return bytes_written;
}
